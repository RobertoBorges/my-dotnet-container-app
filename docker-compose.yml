version: '3.8'

services:
  app:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Server=db;Port=3306;Database=mydatabase;User=root;Password=mypassword;
    networks:
      - app-network

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=mydatabase 
      - MYSQL_ROOT_PASSWORD=mypassword
    volumes:
      - mysql-data:/var/lib/mysql
      # Mount the init.sql file directly in addition to copying it in Dockerfile
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" , "&&", "mysql", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD", "-e", "USE mydatabase; SELECT COUNT(*) > 0 FROM information_schema.tables WHERE table_schema='mydatabase'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

volumes:
  # Use named volume that persists across container restarts
  mysql-data:
    # Add this to ensure a clean start for debugging
    name: mysql-data-${COMPOSE_PROJECT_NAME:-default}

networks:
  app-network:
    driver: bridge
